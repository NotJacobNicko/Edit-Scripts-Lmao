repeat wait() until game:GetService("Players").LocalPlayer
local OrionLib = loadstring(game:HttpGet(("https://raw.githubusercontent.com/Giangplay/Script/main/Orion_Library_PE_V2.lua")))()
local GameName = game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name


function Notifyclient(Text)
	local goofynotiids = {6823153536,6823153536,7991347388,6879335951,217548941,4891171429,17660225827,6879335951}
	local Notisong = Instance.new("Sound",game:GetService("SoundService"))
	Notisong.SoundId = "rbxassetid://"..goofynotiids[math.random(1,#goofynotiids)]
	Notisong.Volume = 4
	Notisong.PlayOnRemove = true
	game:GetService("StarterGui"):SetCore("SendNotification",{Title = "HX?H Guide",Text = Text,Icon = "rbxassetid://18584222941",Duration = 5})
	Notisong:Destroy()
end
if not game:IsLoaded() then
	game.Loaded:Wait()
end
local Window = OrionLib:MakeWindow({IntroText = (GameName), IntroIcon = "rbxassetid://15315284749",Name = ("Slap Battles"),IntroToggleIcon = "rbxassetid://7734091286", HidePremium = false, SaveConfig = false, IntroEnabled = true, ConfigFolder = "slap battles"})

local bypass;
bypass = hookmetamethod(game, "__namecall", function(method, ...) 
	if getnamecallmethod() == "FireServer" and method == game.ReplicatedStorage.Ban then
		return
	elseif getnamecallmethod() == "FireServer" and method == game.ReplicatedStorage.AdminGUI then
		return
	elseif getnamecallmethod() == "FireServer" and method == game.ReplicatedStorage.WalkSpeedChanged then
		return
	end
	return bypass(method, ...)
end)

---Safe---
local S,BobWalk1
if not S or S == nil then
	S = Instance.new("Part")
	S.Name = "ChillBox"
	S.Anchored = true
	S.CanCollide = true
	S.Transparency = .5
	S.Position = Vector3.new(-5500, -5000, -5000)
	S.Size = Vector3.new(21, 5, 21)
	S.Parent = workspace
	
	local Theme = Instance.new("Sound",S)
	Theme.Name = "Jazz"
	Theme.Looped = false
	Theme.Volume = 10
	task.spawn(function()
		local Chill,Section = {1845341094,9043887091,9046862941,9046865270,1842802040},0
		while task.wait(1) do
			if not Theme.IsPlaying then
				Section += 1
				if Section > #Chill+1 then
					Section = 1
				end
				Theme.PlaybackSpeed = .9
				Theme.SoundId = "rbxassetid://"..Chill[1]
				Theme:Play()
			end
		end
	end)

	local S1 = Instance.new("Part")
	S1.Name = "S1"
	S1.Anchored = true
	S1.CanCollide = true
	S1.Transparency = .5
	S1.Position = Vector3.new(-5499.91, -4991.5, -4989.09)
	S1.Size = Vector3.new(20, 13, 2)
	S1.Parent = S

	local S2 = Instance.new("Part")
	S2.Name = "S2"
	S2.Anchored = true
	S2.CanCollide = true
	S2.Transparency = .5
	S2.Position = Vector3.new(-5510.27979, -4991.5, -5000.08984, -4.47034836e-07, 0, 0.999999881, 0, 1, 0, -0.999999881, 0, -3.69319451e-07)
	S2.Size = Vector3.new(21, 14, 2)
	S2.Rotation = Vector3.new(0, -90, 0)
	S2.Parent = S

	local S3 = Instance.new("Part")
	S3.Name = "S3"
	S3.Anchored = true
	S3.CanCollide = true
	S3.Transparency = .5
	S3.Position = Vector3.new(-5499.3, -4991.5, -5011.12)
	S3.Size = Vector3.new(21, 13, 2)
	S3.Parent = S

	local S4 = Instance.new("Part")
	S4.Name = "S4"
	S4.Anchored = true
	S4.CanCollide = true
	S4.Transparency = .5
	S4.Position = Vector3.new(-5489.97559, -4991.5, -4999.52637, -4.37113883e-08, 0, 1, 0, 1, 0, -1, 0, -4.37113883e-08)
	S4.Size = Vector3.new(22, 13, 2)
	S4.Rotation = Vector3.new(0, -90, 0)
	S4.Parent = S

	local S5 = Instance.new("Part")
	S5.Name = "S5"
	S5.Anchored = true
	S5.CanCollide = true
	S5.Transparency = .5
	S5.Position = Vector3.new(-5499.39, -4984, -5000.07)
	S5.Size = Vector3.new(24, 3, 24)
	S5.Parent = S
end

if BobWalk1 == nil then
	BobWalk1 = Instance.new("Part", workspace)
	BobWalk1.CanCollide = false
	BobWalk1.Anchored = true
	BobWalk1.CFrame = CFrame.new(23.2798462, -19.8447475, 1.83554196, -1, 0, 0, 0, -1, 0, 0, 0, 1)
	BobWalk1.Size = Vector3.new(1139.2593994140625, 1.5, 2048)
	BobWalk1.Name = "BobWalk1"
	BobWalk1.Transparency = 1

	local BobWalk2 = Instance.new("Part", BobWalk1)
	BobWalk2.CanCollide = false
	BobWalk2.Anchored = true
	BobWalk2.CFrame = CFrame.new(-458.458344, -9.25, 1.83554196, -1, 0, 0, 0, -1, 0, 0, 0, 1)
	BobWalk2.Size = Vector3.new(1139.2593994140625, 1.5, 2048)
	BobWalk2.Name = "BobWalk2"
	BobWalk2.Transparency = 1

	local BobWalk3 = Instance.new("Part", BobWalk1)
	BobWalk3.CanCollide = false
	BobWalk3.Anchored = true
	BobWalk3.CFrame = CFrame.new(-690.65979, 47.25, 1.83554196, -1, 0, 0, 0, -1, 0, 0, 0, 1)
	BobWalk3.Size = Vector3.new(674.8563232421875, 0.6048492789268494, 2048)
	BobWalk3.Name = "BobWalk3"
	BobWalk3.Transparency = 1

	local BobWalk4 = Instance.new("Part", BobWalk1)
	BobWalk4.CanCollide = false
	BobWalk4.Anchored = true
	BobWalk4.CFrame = CFrame.new(402.964996, 29.25, 222.310089, -1, 0, 0, 0, -1, 0, 0, 0, 1)
	BobWalk4.Size = Vector3.new(379.88922119140625, 1.5, 160.8837127685547)
	BobWalk4.Name = "BobWalk4"
	BobWalk4.Transparency = 1

	local BobWalk5 = Instance.new("Part", BobWalk1)
	BobWalk5.CanCollide = false
	BobWalk5.Anchored = true
	BobWalk5.Orientation = Vector3.new(0, 0, 171.728)
	BobWalk5.CFrame = CFrame.new(178.719162, -18.9417267, 1.83554196, -0.989596844, -0.143868446, 0, 0.143868446, -0.989596844, 0, 0, 0, 1)
	BobWalk5.Size = Vector3.new(143.94830322265625, 1.5, 2048)
	BobWalk5.Name = "BobWalk5"
	BobWalk5.Transparency= 1

	local BobWalk6 = Instance.new("Part", BobWalk1)
	BobWalk6.CanCollide = false
	BobWalk6.Anchored = true
	BobWalk6.Orientation = Vector3.new(0, 0, 144.782)
	BobWalk6.CFrame = CFrame.new(-309.152832, 15.4761791, 1.83554196, -0.816968799, -0.576681912, 0, 0.576681912, -0.816968799, 0, 0, 0, 1)
	BobWalk6.Size = Vector3.new(110.13511657714844, 2.740000009536743, 2048)
	BobWalk6.Name = "BobWalk6"
	BobWalk6.Transparency = 1

	local BobWalk7 = Instance.new("Part", BobWalk1)
	BobWalk7.CanCollide = false
	BobWalk7.Anchored = true
	BobWalk7.Orientation = Vector3.new(0, 0, -147.002)
	BobWalk7.CFrame = CFrame.new(174.971924, 5.34897423, 222.310089, -0.838688731, 0.544611216, 0, -0.544611216, -0.838688731, 0, 0, 0, 1)
	BobWalk7.Size = Vector3.new(89.76103210449219, 1.5, 160.8837127685547)
	BobWalk7.Name = "BobWalk7"
	BobWalk7.Transparency = 1

	local BobWalk8 = Instance.new("Part", BobWalk1)
	BobWalk8.CanCollide = false
	BobWalk8.Anchored = true
	BobWalk8.Orientation = Vector3.new(0.001, -90.002, -138.076)
	BobWalk8.CFrame = CFrame.new(402.965027, 5.49165154, 74.8157959, 2.98023224e-05, -1.14142895e-05, -1, -0.668144584, -0.744031429, -1.14142895e-05, -0.744031489, 0.668144584, -2.98023224e-05)
	BobWalk8.Size = Vector3.new(74.23055267333984, 1, 379.88922119140625)
	BobWalk8.Name = "BobWalk8"
	BobWalk8.Transparency = 1

	local BobWalk9 = Instance.new("Part", BobWalk1)
	BobWalk9.CanCollide = false
	BobWalk9.Anchored = true
	BobWalk9.CFrame = CFrame.new(402.964996, 29.9136467, 121.981705, -1, 0, 0, 0, -1, 0, 0, 0, 1)
	BobWalk9.Size = Vector3.new(379.88922119140625, 1.5, 39.77305603027344)
	BobWalk9.Name = "BobWalk9"
	BobWalk9.Transparency = 1

	local BobWalk10 = Instance.new("WedgePart", BobWalk1)
	BobWalk10.CanCollide = false
	BobWalk10.Anchored = true
	BobWalk10.Orientation = Vector3.new(-30.453, 117.775, -102.906)
	BobWalk10.CFrame = CFrame.new(134.084229, -17.8583984, 94.3953705, 0.541196942, -0.354067981, 0.762719929, -0.840263784, -0.192543149, 0.506837189, -0.0325982571, -0.915184677, -0.401714325)
	BobWalk10.Size = Vector3.new(1, 88.66793823242188, 34.42972946166992)
	BobWalk10.Name = "BobWalk10"
	BobWalk10.Transparency = 1

	local BobWalk11 = Instance.new("WedgePart", BobWalk1)
	BobWalk11.CanCollide = false
	BobWalk11.Anchored = true
	BobWalk11.Orientation = Vector3.new(-29.779, 117.596, -13.193)
	BobWalk11.CFrame = CFrame.new(168.441879, 2.46393585, 125.815231, -0.350553155, -0.534268022, 0.769201458, -0.198098332, 0.845035911, 0.496660322, -0.915352523, 0.0217281878, -0.402067661)
	BobWalk11.Size = Vector3.new(1, 0.9999924302101135, 82.1865463256836)
	BobWalk11.Name = "BobWalk11"
	BobWalk11.Transparency = 1

	local BobWalk12 = Instance.new("WedgePart", BobWalk1)
	BobWalk12.CanCollide = false
	BobWalk12.Anchored = true
	BobWalk12.Orientation = Vector3.new(26.893, -124.388, -108.64)
	BobWalk12.CFrame = CFrame.new(206.315063, 26.9295502, 105.471031, 0.534210563, -0.415855825, -0.73599112, -0.845072925, -0.285055399, -0.452321947, -0.021697551, 0.863601387, -0.503708005)
	BobWalk12.Size = Vector3.new(1, 13.53612232208252, 9.847718238830566)
	BobWalk12.Name = "BobWalk12"
	BobWalk12.Transparency = 1

	local BobWalk13 = Instance.new("WedgePart", BobWalk1)
	BobWalk13.CanCollide = false
	BobWalk13.Anchored = true
	BobWalk13.Orientation = Vector3.new(-26.893, 55.613, 108.64)
	BobWalk13.CFrame = CFrame.new(165.965088, 2.12955856, 77.8575592, -0.53421092, -0.415855944, 0.735991359, 0.845073164, -0.285055757, 0.452322066, 0.0216975808, 0.863601625, 0.503708005)
	BobWalk13.Size = Vector3.new(1, 13.53612232208252, 99.8001480102539)
	BobWalk13.Name = "BobWalk13"
	BobWalk13.Transparency = 1

	local BobWalk14 = Instance.new("WedgePart", BobWalk1)
	BobWalk14.CanCollide = false
	BobWalk14.Anchored = true
	BobWalk14.Orientation = Vector3.new(-0.001, 90.003, 48.072)
	BobWalk14.CFrame = CFrame.new(172.67041, 5.49164963, 74.8157959, -4.58955765e-05, 2.05039978e-05, 1, 0.743987858, 0.668193102, 2.05039978e-05, -0.668193102, 0.743987858, -4.58955765e-05)
	BobWalk14.Size = Vector3.new(1, 74.23055267333984, 80.699951171875)
	BobWalk14.Name = "BobWalk14"
	BobWalk14.Transparency = 1

	local BobWalk15 = Instance.new("WedgePart", BobWalk1)
	BobWalk15.CanCollide = false
	BobWalk15.Anchored = true
	BobWalk15.Orientation = Vector3.new(0, 0, 106.498)
	BobWalk15.CFrame = CFrame.new(212.753906, 30.0632439, 121.981705, -0.283976078, -0.95883137, 0, 0.95883137, -0.283976078, 0, 0, 0, 1)
	BobWalk15.Size = Vector3.new(1, 0.8520558476448059, 39.773048400878906)
	BobWalk15.Name = "BobWalk15"
	BobWalk15.Transparency = 1

	local BobWalk16 = Instance.new("WedgePart", BobWalk1)
	BobWalk16.CanCollide = false
	BobWalk16.Anchored = true
	BobWalk16.Orientation = Vector3.new(29.777, -62.406, -75.066)
	BobWalk16.CFrame = CFrame.new(212.884216, 30.1233234, 121.984734, 0.544644356, 0.33412537, -0.769235253, -0.838644743, 0.223680317, -0.496630788, 0.00612583756, 0.915602207, 0.402038693)
	BobWalk16.Size = Vector3.new(1, 36.08900451660156, 16.739320755004883)
	BobWalk16.Name = "BobWalk16"
	BobWalk16.Transparency = 1

	local BobWalk17 = Instance.new("WedgePart", BobWalk1)
	BobWalk17.CanCollide = false
	BobWalk17.Anchored = true
	BobWalk17.Orientation = Vector3.new(-29.777, 117.594, 75.066)
	BobWalk17.CFrame = CFrame.new(174.83577, 5.55865097, 141.871262, -0.544644356, 0.33412537, 0.769235253, 0.838644743, 0.223680317, 0.496630788, -0.00612583756, 0.915602207, -0.402038693)
	BobWalk17.Size = Vector3.new(1, 36.08900451660156, 82.1865463256836)
	BobWalk17.Name = "BobWalk17"
	BobWalk17.Transparency = 1

	local BobWalk18 = Instance.new("WedgePart", BobWalk1)
	BobWalk18.CanCollide = false
	BobWalk18.Anchored = true
	BobWalk18.Orientation = Vector3.new(30.453, -62.225, 102.906)
	BobWalk18.CFrame = CFrame.new(165.427338, 2.97219658, 77.884697, -0.541196942, -0.354067981, -0.762719929, 0.840263784, -0.192543149, -0.506837189, 0.0325982571, -0.915184677, 0.401714325)
	BobWalk18.Size = Vector3.new(1, 88.66793823242188, 47.76289749145508)
	BobWalk18.Name = "BobWalk18"
	BobWalk18.Transparency = 1
end

if workspace:FindFirstChild("VoidPart") == nil then
	local VoidPart = Instance.new("Part", workspace)
	VoidPart.Position = Vector3.new(-80.5, -10.005, -246.5)
	VoidPart.Name = "VoidPart"
	VoidPart.Size = Vector3.new(2048, 1, 2048)
	VoidPart.Material = "ForceField"
	VoidPart.Anchored = true
	VoidPart.Transparency = 1
	VoidPart.CanCollide = false
end

local Tab7 = Window:MakeTab({
	Name = "PVP",
	Icon = "rbxassetid://4370318685",
	PremiumOnly = false
})
local Tab2 = Window:MakeTab({
	Name = "Antis",
	Icon = "rbxassetid://7734056608",
	PremiumOnly = false
})
Tab7:AddDropdown({
	Name = "Teleport",
	Default = "",
	Options = {"Arena", "Lobby", "Hunter Room", "Brazil", "Island Slapple", "Plate", "Tournament", "Cannon Island", "Keypad", "Moai Island", "Island 1", "Island 2", "Island 3"},
	Callback = function(Value)
		_G.JustChillRoom = false
		if Value == "Arena" then
			game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.Origo.CFrame * CFrame.new(0,-5,0)
		elseif Value == "Lobby" then
			game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-800,328,-2.5)
		elseif Value == "Hunter Room" then
			game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.BountyHunterRoom.Union.CFrame * CFrame.new(0,5,0)
		elseif Value == "Brazil" then
			game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.Lobby.brazil.portal.CFrame
		elseif Value == "Island Slapple" then
			game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.Arena.island5.Union.CFrame * CFrame.new(0,3.25,0)
		elseif Value == "Plate" then
			game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Arena.Plate.CFrame
		elseif Value == "Tournament" then
			game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.Battlearena.Arena.CFrame * CFrame.new(0,10,0)
		elseif Value == "Cannon Island" then
			game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.Arena.CannonIsland.Cannon.Base.CFrame * CFrame.new(0,0,35)
		elseif Value == "Keypad" then
			if not workspace:FindFirstChild("Keypad") then
				OrionLib:MakeNotification({Name = "Error",Content = "Server in don't have keypad.",Image = "rbxassetid://7733658504",Time = 5})
			else
				game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.Keypad.Buttons.Enter.CFrame
			end
		elseif Value == "Moai Island" then
			game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(215, -15.5, 0.5)
		elseif Value == "Island 1" then
			game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-211.210846, -5.27827597, 4.13719559, -0.0225322824, 1.83683113e-08, -0.999746144, -1.83560154e-08, 1, 1.87866842e-08, 0.999746144, 1.87746618e-08, -0.0225322824)
		elseif Value == "Island 2" then
			game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-8.17191315, -5.14452887, -205.249741, -0.98216176, -3.48867246e-09, -0.188037917, -4.19987778e-09, 1, 3.38382322e-09, 0.188037917, 4.11319823e-09, -0.98216176)
		elseif Value == "Island 3" then
			game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-6.66747713, -5.06731462, 213.575378, 0.945777893, 2.52095178e-10, 0.324814111, -3.7823856e-08, 1, 1.09357536e-07, -0.324814111, -1.15713661e-07, 0.945777893)
		end
	end    
})
local lastpos = Vector3.new()

Tab7:AddButton({
	Name = "Chill Room",
	Callback = function()
		local PlrChar = game:GetService("Players").LocalPlayer.Character
		local Root = PlrChar:FindFirstChild("Torso") or PlrChar:FindFirstChild("HumanoidRootPart") or PlrChar:FindFirstChild("Head")
		Root.CFrame = S.CFrame * CFrame.new(0,5,0)
	end 
})

Tab7:AddToggle({
	Name = "Phase/Jet/Siphon Orb Grind",
	Default = false,
	Callback = function(Value)
		_G.PhaseOrJetfarm = Value
		while _G.PhaseOrJetfarm do
			for i,v in pairs(workspace:GetChildren()) do
				if v.Name == "JetOrb" or v.Name == "PhaseOrb" or v.Name == "SiphonOrb" then
					firetouchinterest(game.Players.LocalPlayer.Character:WaitForChild("Head"), v, 0)
					firetouchinterest(game.Players.LocalPlayer.Character:WaitForChild("Head"), v, 1)
				end
			end
			task.wait()
		end
	end    
})
Tab7:AddToggle({
	Name = "Autofarm Slapples/CandyCorn",
	Default = false,
	Callback = function(Value)
		_G.SlappleFarm = Value
		while _G.SlappleFarm do
			if game:GetService("Players").LocalPlayer.Character:FindFirstChild("entered") then
				for i, v in pairs(workspace.Arena.island5.Slapples:GetChildren()) do
					if game:GetService("Players").LocalPlayer.Character:FindFirstChild("HumanoidRootPart") and game:GetService("Players").LocalPlayer.Character:FindFirstChild("entered") and v.Name == "Slapple" or v.Name == "GoldenSlapple" and Glove and v.Glove:FindFirstChildWhichIsA("TouchTransmitter") then
						firetouchinterest(game:GetService("Players").LocalPlayer.Character.HumanoidRootPart, v.Glove, 0)
						firetouchinterest(game:GetService("Players").LocalPlayer.Character.HumanoidRootPart, v.Glove, 1)
					end
				end
				local Folder = workspace:FindFirstChild("CandyCorns")
				if Folder and #Folder:GetChildren() > 0 then
					for i, v in pairs(Folder:GetChildren()) do
						if game:GetService("Players").LocalPlayer.Character:FindFirstChild("Head") and v:FindFirstChildWhichIsA("TouchTransmitter") then
							firetouchinterest(game:GetService("Players").LocalPlayer.Character.Head, v, 0)
							firetouchinterest(game:GetService("Players").LocalPlayer.Character.Head, v, 1)
						end
					end
				end
			end
			task.wait()
		end
	end    
})

local ShouldEnable = {}
Tab7:AddSlider({
	Name = "Reach HitBox",
	Min = 2,
	Max = 30,
	Default = 8,
	Color = Color3.fromRGB(255,255,255),
	Increment = 1,
	ValueName = "Reach",
	Callback = function(Value)
		_G.ReachHitbox = Value
	end    
})
table.insert(ShouldEnable,Tab7:AddToggle({
	Name = "Hitbox Player",
	Default = false,
	Callback = function(Value)
		_G.HitboxPlayer = Value
		while _G.HitboxPlayer do
			for i,v in pairs(game:GetService("Players"):GetChildren()) do
				if v ~= game:GetService("Players").LocalPlayer and v.Character and v.Character:FindFirstChild("HumanoidRootPart") then
					v.Character.HumanoidRootPart.Size = Vector3.new(_G.ReachHitbox,_G.ReachHitbox,_G.ReachHitbox)
					v.Character.HumanoidRootPart.Transparency = 0.75
				end
			end
			task.wait()
		end
		if _G.HitboxPlayer == false then
			for i,v in pairs(game:GetService("Players"):GetChildren()) do
				if v ~= game:GetService("Players").LocalPlayer and v.Character and v.Character:FindFirstChild("HumanoidRootPart") then
					v.Character.HumanoidRootPart.Size = Vector3.new(2, 2, 1)
					v.Character.HumanoidRootPart.Transparency = 1
				end
			end
		end
	end    
}))

Tab7:AddSlider({
	Name = "Extend Glove",
	Min = 2,
	Max = 50,
	Default = 13,
	Color = Color3.fromRGB(255,255,255),
	Increment = 1,
	ValueName = "Extend",
	Callback = function(Value)
		_G.GloveExtendReach = Value
	end    
})

Tab7:AddDropdown({
	Name = "Extend Option",
	Default = "Sideway Poll",
	Options = {"Meat Stick","Pancake","Growth","North Korea Wall","Slight Extend","Sideway Poll"},
	Callback = function(Value)
		_G.GloveExtendOption = Value
	end    
})
table.insert(ShouldEnable,Tab7:AddToggle({
	Name = "Extend Glove",
	Default = false,
	Callback = function(Value)
		_G.GloveExtendGet = Value
		while _G.GloveExtendGet do
			if game:GetService("Players").LocalPlayer:WaitForChild("Backpack"):FindFirstChildOfClass("Tool") ~= nil then
				for _,v in pairs(game:GetService("Players").LocalPlayer.Backpack:GetChildren()) do
					if v:IsA("Tool") and v.Name ~= "Radio" then
						local Glove = v:FindFirstChild("Glove")
						if Glove ~= nil then
							if _G.GloveExtendOption == "Meat Stick" then
								Glove.Size = Vector3.new(0, _G.GloveExtendReach, 2)
							elseif _G.GloveExtendOption == "Pancake" then
								Glove.Size = Vector3.new(0, _G.GloveExtendReach, _G.GloveExtendReach)
							elseif _G.GloveExtendOption == "Growth" then
								Glove.Size = Vector3.new(_G.GloveExtendReach,_G.GloveExtendReach,_G.GloveExtendReach)
							elseif _G.GloveExtendOption == "North Korea Wall" then
								Glove.Size = Vector3.new(_G.GloveExtendReach,0,_G.GloveExtendReach)
							elseif _G.GloveExtendOption == "Slight Extend" then
								Glove.Size = Vector3.new(3, 3, 3.7)
							elseif _G.GloveExtendOption == "Sideway Poll" then
								Glove.Size = Vector3.new(2, _G.GloveExtendReach, 2)
							end
							if Glove:IsA("Part") and Glove:FindFirstChildWhichIsA("SpecialMesh") then
								Glove:FindFirstChildWhichIsA("SpecialMesh").Scale = Vector3.new(Glove.Size.X/4,Glove.Size.Y/4,Glove.Size.Z/2)
							end
							Glove.Transparency = 0.5
						end
					end
				end
			else
				for _,v in pairs(game:GetService("Players").LocalPlayer.Character:GetChildren()) do
					if v:IsA("Tool") and v.Name ~= "Radio" then
						local Glove = v:FindFirstChild("Glove")
						if Glove ~= nil then
							if _G.GloveExtendOption == "Meat Stick" then
								Glove.Size = Vector3.new(0, _G.GloveExtendReach, 2)
							elseif _G.GloveExtendOption == "Pancake" then
								Glove.Size = Vector3.new(0, _G.GloveExtendReach, _G.GloveExtendReach)
							elseif _G.GloveExtendOption == "Growth" then
								Glove.Size = Vector3.new(_G.GloveExtendReach,_G.GloveExtendReach,_G.GloveExtendReach)
							elseif _G.GloveExtendOption == "North Korea Wall" then
								Glove.Size = Vector3.new(_G.GloveExtendReach,0,_G.GloveExtendReach)
							elseif _G.GloveExtendOption == "Slight Extend" then
								Glove.Size = Vector3.new(3, 3, 3.7)
							elseif _G.GloveExtendOption == "Sideway Poll" then
								Glove.Size = Vector3.new(2, _G.GloveExtendReach, 2)
							end
							if Glove:IsA("Part") and Glove:FindFirstChildWhichIsA("SpecialMesh") then
								Glove:FindFirstChildWhichIsA("SpecialMesh").Scale = Vector3.new(Glove.Size.X/4,Glove.Size.Y/4,Glove.Size.Z/2)
							end
							Glove.Transparency = 0.5
						end
					end
				end
			end
			task.wait()
		end
		if _G.GloveExtendGet == false then
			if game:GetService("Players").LocalPlayer:WaitForChild("Backpack"):FindFirstChildOfClass("Tool") ~= nil then
				for _,v in pairs(game:GetService("Players").LocalPlayer.Backpack:GetChildren()) do
					if v:IsA("Tool") and v.Name ~= "Radio" then
						local Glove = v:FindFirstChild("Glove")
						if Glove ~= nil then
							Glove.Size = Vector3.new(2.5, 2.5, 1.75)
							Glove.Transparency = 0
							if Glove:IsA("Part") and Glove:FindFirstChildWhichIsA("SpecialMesh") then
								Glove:FindFirstChildWhichIsA("SpecialMesh").Scale = Vector3.new(Glove.Size.X/4,Glove.Size.Y/4,Glove.Size.Z/2)
							end
						end
					end
				end
			else
				for _,v in pairs(game:GetService("Players").LocalPlayer.Character:GetChildren()) do
					if v:IsA("Tool") and v.Name ~= "Radio" then
						local Glove = v:FindFirstChild("Glove")
						if Glove ~= nil then
							Glove.Size = Vector3.new(2.5, 2.5, 1.75)
							Glove.Transparency = 0
							if Glove:IsA("Part") and Glove:FindFirstChildWhichIsA("SpecialMesh") then
								Glove:FindFirstChildWhichIsA("SpecialMesh").Scale = Vector3.new(Glove.Size.X/4,Glove.Size.Y/4,Glove.Size.Z/2)
							end
						end
					end
				end
			end
		end
	end    
}))
Tab7:AddButton({
	Name = "ServerHop",
	Callback = function()
		local teleportFunc = queueonteleport or queue_on_teleport
		if teleportFunc then
			teleportFunc([[
			function Notifyclient(Text)
	local goofynotiids = {6823153536,6823153536,7991347388,6879335951,217548941,4891171429,17660225827,6879335951}
	local Notisong = Instance.new("Sound",game:GetService("SoundService"))
	Notisong.SoundId = "rbxassetid://"..goofynotiids[math.random(1,#goofynotiids)]
	Notisong.Volume = 4
	Notisong.PlayOnRemove = true
	game:GetService("StarterGui"):SetCore("SendNotification",{Title = "HX?H Guide",Text = Text,Icon = "rbxassetid://18584222941",Duration = 5})
	Notisong:Destroy()
end
if not game:IsLoaded() then
	Notifyclient("your client is loading please wait")
	game.Loaded:Wait()
end
repeat wait() until game:GetService("Players").LocalPlayer
Notifyclient("Loading hub back")
task.wait(1)
loadstring(game:HttpGet("https://raw.githubusercontent.com/NotJacobNicko/Edit-Scripts-Lmao/refs/heads/main/yessirrrr"))()
    		]])
			local httprequest = (syn and syn.request) or (http and http.request) or http_request or (fluxus and fluxus.request) or request
			if httprequest then
				local servers = {}
				local req = httprequest({Url = string.format("https://games.roblox.com/v1/games/%d/servers/Public?sortOrder=Desc&limit=100&excludeFullGames=true", game.PlaceId)})
				local body = game:GetService("HttpService"):JSONDecode(req.Body)

				if body and body.data then
					for i, v in next, body.data do
						if type(v) == "table" and tonumber(v.playing) and tonumber(v.maxPlayers) and v.playing < v.maxPlayers and v.id ~= game.JobId then
							table.insert(servers, 1, v.id)
						end
					end
				end

				if #servers > 0 then
					game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, servers[math.random(1, #servers)], game:GetService("Players").LocalPlayer)
				else
					Notifyclient("Couldn't find a server.")
					return 
				end
			else
				Notifyclient("Your exploit does not support this command (missing request)")
			end

		end
	end    
})

Tab7:AddColorpicker({
	Name = "Color ESP",
	Default = Color3.fromRGB(43, 0, 255),
	Callback = function(Value)
		_G.ColorESP = Value
	end	  
})
if game.PlaceId == 11520107397 then
	table.insert(ShouldEnable,Tab7:AddToggle({
		Name = "ESP Kill",
		Default = false,
		Callback = function(Value)
			_G.KillESP = Value
			if _G.KillESP == false then
				for i, v in ipairs(game:GetService("Players"):GetChildren()) do
					if v.Character and v.Character:FindFirstChild("Head") and v.Character.Head:FindFirstChild("KillESP") then
						v.Character.Head.KillESP:Destroy()
					end
				end
			end
			while _G.KillESP do
				for i,v in ipairs(game:GetService("Players"):GetChildren()) do
					if v ~= game:GetService("Players").LocalPlayer and v.Character and v.Character:FindFirstChild("Head") and v.Character:FindFirstChild("KillstreakLevel") then
						if v.Character.Head:FindFirstChild("KillESP") and v.Character.Head.KillESP:FindFirstChild("TextLabel") and v.Character.Head.KillESP.TextLabel.TextColor3 ~= _G.ColorESP then
							v.Character.Head.KillESP.TextLabel.TextColor3 = _G.ColorESP
						end
						if v.Character.Head:FindFirstChild("KillESP") and v.Character.Head.KillESP:FindFirstChild("TextLabel") and v.Character.Head.KillESP.TextLabel.Text ~= "Kill [ "..v.Character.KillstreakLevel.Value.." ]" then
							if v.Character:FindFirstChild("KillstreakLevel") and v.Character.KillstreakLevel.Value ~= 0 then
								v.Character.Head.KillESP.TextLabel.Text = "Kill [ "..v.Character.KillstreakLevel.Value.." | "..v.Name.." ]"
							end
						end
						if v.Character:FindFirstChild("KillstreakLevel") and v.Character.Head:FindFirstChild("KillESP") == nil then
							KillESP = Instance.new("BillboardGui", v.Character.Head)
							KillESP.Adornee = v.Character.Head
							KillESP.Name = "KillESP"
							KillESP.Size = UDim2.new(0, 100, 0, 150)
							KillESP.StudsOffset = Vector3.new(0, 1, 0)
							KillESP.AlwaysOnTop = true
							KillESP.StudsOffset = Vector3.new(0, 3, 0)
							KillESPText = Instance.new("TextLabel", KillESP)
							KillESPText.BackgroundTransparency = 1
							KillESPText.Size = UDim2.new(0, 100, 0, 100)
							KillESPText.TextSize = 20
							KillESPText.Font = Enum.Font.FredokaOne
							KillESPText.TextColor3 = _G.ColorESP
							KillESPText.TextStrokeTransparency = 0.5
							KillESPText.Text = "Kill [ "..v.Character.KillstreakLevel.Value.." | "..v.Name.." ]"
						end
					end
				end
				task.wait()
			end
		end    
	}))
else
	table.insert(ShouldEnable,Tab7:AddToggle({
		Name = "Glove Esp",
		Default = false,
		Callback = function(Value)
			_G.GloveEsp = Value
			if _G.GloveEsp == false then
				for i, v in ipairs(game:GetService("Players"):GetChildren()) do
					if v.Character and v.Character:FindFirstChild("Head") and v.Character.Head:FindFirstChild("GloveEsp") then
						v.Character.Head.GloveEsp:Destroy()
					end
				end
			end
			while _G.GloveEsp do
				for i, v in ipairs(game:GetService("Players"):GetChildren()) do
					if v ~= game:GetService("Players").LocalPlayer and v.Character and v.Character:FindFirstChild("Head") and v.Character.inMatch.Value == true and v.Character.Head:FindFirstChild("GloveEsp") == nil then
						GloveEsp = Instance.new("BillboardGui", v.Character.Head)
						GloveEsp.Adornee = v.Character.Head
						GloveEsp.Name = "GloveEsp"
						GloveEsp.Size = UDim2.new(0, 100, 0, 150)
						GloveEsp.StudsOffset = Vector3.new(0, 1, 0)
						GloveEsp.AlwaysOnTop = true
						GloveEsp.StudsOffset = Vector3.new(0, 3, 0)
						GloveEspText = Instance.new("TextLabel", GloveEsp)
						GloveEspText.BackgroundTransparency = 1
						GloveEspText.Size = UDim2.new(0, 100, 0, 100)
						GloveEspText.TextSize = 25
						GloveEspText.Font = Enum.Font.FredokaOne
						GloveEspText.TextColor3 = Color3.new(255, 255, 255)
						GloveEspText.TextStrokeTransparency = 0
						GloveEspText.Text = "Glove [ "..v.Glove.Value.." ]"
					end
				end
				task.wait()
			end
		end    
	}))
end


Tab2:AddDropdown({
	Name = "Anti Void",
	Default = "Normal",
	Options = {"Normal","Bob"},
	Callback = function(Value)
		if _G.AntiVoid == true then
			_G.AntiVoidChoose = Value
		elseif _G.AntiVoid == false then
			_G.AntiVoidChoose = Value
		end
	end    
})

Tab2:AddToggle({
	Name = "Anti Void",
	Default = false,
	Callback = function(Value)
		_G.AntiVoid = Value
		if _G.AntiVoidChoose == "Normal" then
			workspace["VoidPart"].CanCollide = Value
			if Value == false then
				workspace["VoidPart"].Transparency = 1
			else
				workspace["VoidPart"].Transparency = 0.5
			end
		elseif _G.AntiVoidChoose == "Bob" then
			workspace["BobWalk1"].CanCollide = Value
			for i,v in pairs(workspace.BobWalk1:GetChildren()) do
				v.CanCollide = Value
			end
			if Value == true then
				workspace["BobWalk1"].Transparency = _G.Transparency
				for i,v in pairs(workspace.BobWalk1:GetChildren()) do
					v.Transparency = 0.5
				end
			else
				workspace["BobWalk1"].Transparency = 1
				for i,v in pairs(workspace.BobWalk1:GetChildren()) do
					v.Transparency = 1
				end
			end
		end
	end    
})
local TaggedTable = {}
game:GetService("Players").PlayerAdded:Connect(function(v)
	if (v:GetRankInGroup(9950771) >= 2) and _G.AntiMods then
		if v.Character.Head:FindFirstChild("AdminTagger") == nil then
			KillESP = Instance.new("BillboardGui", v.Character.Head)
			KillESP.Adornee = v.Character.Head
			KillESP.Name = "AdminTagger"
			KillESP.Size = UDim2.new(0, 100, 0, 150)
			KillESP.StudsOffset = Vector3.new(0, 1, 0)
			KillESP.AlwaysOnTop = true
			KillESP.StudsOffset = Vector3.new(0, 4, 0)
			KillESPText = Instance.new("TextLabel", KillESP)
			KillESPText.BackgroundTransparency = 1
			KillESPText.Size = UDim2.new(0, 100, 0, 100)
			KillESPText.TextSize = 20
			KillESPText.Font = Enum.Font.FredokaOne
			KillESPText.TextColor3 = Color3.new(1, 1, 1)
			KillESPText.TextStrokeTransparency = 0.5
			KillESPText.Text = "![Admin]!"
		end

		local InfoPlayer = {
			["PlrName"] = v.Name.."{@"..v.DisplayName.."}",
			["Slaps"] = v:FindFirstChild("leaderstats"):FindFirstChild("Slaps").Value or "??",
			["Role"] = v:GetRoleInGroup(9950771) or "??"
		}
		table.insert(TaggedTable,v)
		Notifyclient("High Rank Member: "..InfoPlayer["PlrName"].."["..InfoPlayer["Role"].."] With "..InfoPlayer["Slaps"].." Slaps Joined The Server.")
		_G.SlappleFarm = false
	end
end)

table.insert(ShouldEnable,Tab2:AddToggle({
	Name = "Notify Staff Rank",
	Default = false,
	Callback = function(Value)
		_G.AntiMods = Value  
		TaggedTable = {}
		while _G.AntiMods do
			for i,v in pairs(game:GetService("Players"):GetPlayers()) do
				if v and v:GetRankInGroup(9950771) >= 2 then
					local RankNo = v:GetRankInGroup(9950771)
					
					if RankNo >= 5 then
						if v.Character.Head:FindFirstChild("THISISSTAFF") == nil then
							KillESP = Instance.new("BillboardGui", v.Character.Head)
							KillESP.Adornee = v.Character.Head
							KillESP.Name = "THISISSTAFF"
							KillESP.Size = UDim2.new(0, 100, 0, 150)
							KillESP.StudsOffset = Vector3.new(0, 1, 0)
							KillESP.AlwaysOnTop = true
							KillESP.StudsOffset = Vector3.new(0, 4, 0)
							KillESPText = Instance.new("TextLabel", KillESP)
							KillESPText.BackgroundTransparency = 1
							KillESPText.Size = UDim2.new(0, 100, 0, 100)
							KillESPText.TextSize = 20
							KillESPText.Font = Enum.Font.FredokaOne
							KillESPText.TextColor3 = Color3.new(1, 0, 0)
							KillESPText.TextStrokeTransparency = 0.5
							KillESPText.Text = "![High Staff]!"
						end
					else
						if v.Character.Head:FindFirstChild("Rank") == nil then
							KillESP = Instance.new("BillboardGui", v.Character.Head)
							KillESP.Adornee = v.Character.Head
							KillESP.Name = "Rank"
							KillESP.Size = UDim2.new(0, 100, 0, 150)
							KillESP.StudsOffset = Vector3.new(0, 1, 0)
							KillESP.AlwaysOnTop = true
							KillESP.StudsOffset = Vector3.new(0, 4, 0)
							KillESPText = Instance.new("TextLabel", KillESP)
							KillESPText.BackgroundTransparency = 1
							KillESPText.Size = UDim2.new(0, 100, 0, 100)
							KillESPText.TextSize = 20
							KillESPText.Font = Enum.Font.FredokaOne
							KillESPText.TextColor3 = Color3.new(1, 1, 1)
							KillESPText.TextStrokeTransparency = 0.5
							KillESPText.Text = "!["..v:GetRoleInGroup(9950771).."]!"
						end
					end
					
					
				


					task.spawn(function()
						if not table.find(TaggedTable,v) then
							table.insert(TaggedTable,v)
							local InfoPlayer = {
								["PlrName"] = v.Name,
								["Slaps"] = v:FindFirstChild("leaderstats"):FindFirstChild("Slaps").Value or "??",
								["Role"] = v:GetRoleInGroup(9950771) or "??"
							}

							Notifyclient("High Rank Member: "..InfoPlayer["PlrName"].." Aka ["..InfoPlayer["Role"].."] With "..InfoPlayer["Slaps"].." Slaps Is In The Server.")
							_G.SlappleFarm = false
						end
					end)
				end
			end
			task.wait()
		end
	end    
}))
Tab2:AddToggle({
	Name = "Kick When Staff Joins",
	Default = false,
	Callback = function(Value)
		_G.KickWhenStaffJoins = Value
		while _G.KickWhenStaffJoins do
			for i,v in pairs(game:GetService("Players"):GetPlayers()) do
				if v:GetRankInGroup(9950771) >= 8 then
					_G.AntiKick = false
					local InfoPlayer = {
						["PlrName"] = v.Name.."{@"..v.DisplayName.."}",
						["Slaps"] = v:FindFirstChild("leaderstats"):FindFirstChild("Slaps").Value or "??",
						["Role"] = v:GetRoleInGroup(9950771) or "??"
					}
					game:GetService("Players").LocalPlayer:Kick("High Rank Member: "..InfoPlayer["PlrName"].."["..InfoPlayer["Role"].."] With "..InfoPlayer["Slaps"].." Slaps Joined The Server.")
					break
				end
			end
			task.wait()
		end
	end    
})
Tab2:AddToggle({
	Name = "Anti Kick",
	Default = false,
	Callback = function(Value)
		_G.AntiKick = Value
		while _G.AntiKick do
			for i,v in pairs(game.CoreGui.RobloxPromptGui.promptOverlay:GetDescendants()) do
				if v.Name == "ErrorPrompt" then
					game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, game.JobId, game:GetService("Players").LocalPlayer)
				end
			end
			task.wait()
		end
	end    
})
Tab2:AddToggle({
	Name = "No ScreenBlind",
	Default = false,
	Callback = function(Value)
		_G.FRICKYOUBLIND = Value
		while _G.FRICKYOUBLIND do
			if game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("SquidInk") then
				game:GetService("Players").LocalPlayer.PlayerGui.SquidInk.Enabled = false
			end
			if game:GetService("Players").LocalPlayer.Character:FindFirstChild("YouHaveGotMail") then
				game:GetService("Players").LocalPlayer.Character.YouHaveGotMail.Disabled = true
			end
			if game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("MittenBlind") then
				game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("MittenBlind"):Destroy()
			end
			task.wait()
		end
	end    
})
local Tagged = {}
Tab2:AddToggle({
	Name = "No Lighting",
	Default = false,
	Callback = function(Value)
		_G.ByeLighting = Value
		if not _G.ByeLighting then
			for i,Obj in pairs(Tagged) do
				if Obj then
					Obj.Enabled = true
				end
			end
		end
		while _G.ByeLighting do
			task.wait()
			if workspace.CurrentCamera then
				workspace.CurrentCamera:ClearAllChildren()
			end
			local Lighting = game:GetService("Lighting")
			Lighting.Ambient = Color3.fromRGB(70, 70, 70)
			Lighting.Brightness = 3
			Lighting.ColorShift_Top = Color3.new(0, 0, 0)
			Lighting.ColorShift_Bottom = Color3.new(0, 0, 0)
			Lighting.EnvironmentDiffuseScale = 1
			Lighting.EnvironmentSpecularScale = 1
			Lighting.GlobalShadows = true
			Lighting.OutdoorAmbient = Color3.fromRGB(70, 70, 70)
			Lighting.ShadowSoftness = .2
			Lighting.ClockTime = 12
			Lighting.GeographicLatitude = 0
			Lighting.ExposureCompensation = 0
			Lighting.FogColor = Color3.fromRGB(255, 255, 255)
			Lighting.FogStart = 0
			Lighting.FogEnd = math.huge

			for i,v in pairs(Lighting:GetChildren()) do
				if v:IsA("ColorCorrectionEffect") or v:IsA("BloomEffect") or v:IsA("BlurEffect") or v:IsA("DepthOfFieldEffect") or v:IsA("SunRaysEffect") then
					table.insert(Tagged,v)
					v.Enabled = false
				else
					v:Destroy()
				end
			end
		end
	end    
})
Tab2:AddToggle({
	Name = "Anti Afk",
	Default = true,
	Callback = function(Value)
		_G.AntiAfk = Value
		for i,v in next, getconnections(game:GetService("Players").LocalPlayer.Idled) do
			if _G.AntiAfk then
				v:Disable()
			else
				v:Enable()
			end
		end
	end    
})

Tab2:AddToggle({
	Name = "Anti Cube Of Death",
	Default = false,
	Callback = function(Value)
		if Value == true then
			if workspace:FindFirstChild("the cube of death(i heard it kills)", 1) and workspace.Arena.CubeOfDeathArea["the cube of death(i heard it kills)"]:FindFirstChild("Part") then
				workspace.Arena.CubeOfDeathArea["the cube of death(i heard it kills)"].CanTouch = false
				workspace.Arena.CubeOfDeathArea["the cube of death(i heard it kills)"].Part.CanTouch = false
			end
		else
			if workspace:FindFirstChild("the cube of death(i heard it kills)", 1) and workspace.Arena.CubeOfDeathArea["the cube of death(i heard it kills)"]:FindFirstChild("Part") then
				workspace.Arena.CubeOfDeathArea["the cube of death(i heard it kills)"].CanTouch = true
				workspace.Arena.CubeOfDeathArea["the cube of death(i heard it kills)"].Part.CanTouch = true
			end
		end
	end    
})

Tab2:AddToggle({
	Name = "Anti Death Barriers",
	Default = false,
	Callback = function(Value)
		if Value == true then
			for i,v in pairs(workspace.DEATHBARRIER:GetChildren()) do
				if v.ClassName == "Part" and v.Name == "BLOCK" then
					v.CanTouch = false
				end
			end
			workspace.DEATHBARRIER.CanTouch = false
			workspace.DEATHBARRIER2.CanTouch = false
			workspace.dedBarrier.CanTouch = false
			workspace.ArenaBarrier.CanTouch = false
			workspace.AntiDefaultArena.CanTouch = false
		else
			for i,v in pairs(workspace.DEATHBARRIER:GetChildren()) do
				if v.ClassName == "Part" and v.Name == "BLOCK" then
					v.CanTouch = true
				end
			end
			workspace.DEATHBARRIER.CanTouch = true
			workspace.DEATHBARRIER2.CanTouch = true
			workspace.dedBarrier.CanTouch = true
			workspace.ArenaBarrier.CanTouch = true
			workspace.AntiDefaultArena.CanTouch = true
		end
	end    
})
Tab2:AddDropdown({
	Name = "Location When Saved",
	Default = "safe room",
	Options = {"slapple","safe room"},
	Callback = function(Value)
		_G.LocationToTeleport = Value
	end    
})
local TouchCon,CurrentObj = {},{}
Tab2:AddToggle({
	Name = "Auto Safety",
	Default = false,
	Callback = function(Value)
		_G.ActiveSafeRoom = Value
		if not _G.ActiveSafeRoom then
			for i,Connection in pairs(TouchCon) do
				if Connection then
					Connection:Disconnect()
				end
			end
			for i,Obj in pairs(CurrentObj) do
				if Obj then
					pcall(game.Destroy,Obj)
					pcall(game.Remove,Obj)
				end
			end
			return
		end
		local PlrChar = game:GetService("Players").LocalPlayer.Character
		local PlrRoot = PlrChar:FindFirstChild("Torso") or PlrChar:FindFirstChild("HumanoidRootPart") or PlrChar:FindFirstChild("Head")
		local TouchDebounce = false
		local function ApplyAnti(obj)
			if not obj then
				return
			end
			obj.CanTouch = false
			local Cloned = obj:Clone()
			table.insert(CurrentObj,Cloned)
			Cloned.Name = "Part"
			Cloned.Transparency = .7
			Cloned.Position = Vector3.new(obj.Position.X,obj.Position.Y+5,obj.Position.Z)
			Cloned.CanTouch = true
			Cloned.Parent = workspace.Terrain
			task.spawn(function()
				repeat 
					task.wait()
				until not Cloned or not Cloned.Parent
				obj.CanTouch = true
			end)
			table.insert(TouchCon,Cloned.Touched:Connect(function(obj)
				if obj:IsA("BasePart") and (obj.Parent and obj.Parent:IsA("Model")) then
					if obj.Parent == PlrChar then
						local Humanoid = PlrChar:FindFirstChildWhichIsA("Humanoid")
						if Humanoid.Health > 0 then
							if not TouchDebounce then
								TouchDebounce = true
								task.spawn(function()
									local Randomfunnyaudio =  {8080941676,73207009484146,8057582619,7147349812}
									local goofySound = Instance.new("Sound",workspace)
									goofySound.PlayOnRemove = true
									goofySound.Volume = 5
									goofySound.SoundId = "rbxassetid://"..Randomfunnyaudio[math.random(1,#Randomfunnyaudio)]
									goofySound:Remove()
								end)
								
								if _G.LocationToTeleport == "slapple" then
									PlrRoot.CFrame = workspace.Arena.island5.Union.CFrame * CFrame.new(0,10,0)
								else
									PlrRoot.CFrame = S.CFrame * CFrame.new(0,5,0)
								end
								task.wait(1)
								TouchDebounce = false
							end
						end
					end
				end
			end))
		end
		for i,v in pairs(workspace.DEATHBARRIER:GetChildren()) do
			if v.ClassName == "Part" and v.Name == "BLOCK" then
				ApplyAnti(v)
			end
		end
		ApplyAnti(workspace.DEATHBARRIER)
		ApplyAnti(workspace.DEATHBARRIER2)
		ApplyAnti(workspace.dedBarrier)
		ApplyAnti(workspace.ArenaBarrier)
	end    
})

Tab2:AddDropdown({
	Name = "Ragdoll Type",
	Default = "fake lag",
	Options = {"always","fake lag"},
	Callback = function(Value)
		_G.TypesOfragdoll = Value
	end    
})
local Tagged = {}

Tab2:AddToggle({
	Name = "Anti Ragdoll",
	Default = false,
	Callback = function(Value)
		_G.AntiRagdoll = Value
		while _G.AntiRagdoll do
			local PlrChar = game:GetService("Players").LocalPlayer.Character
			local PlrRoot = PlrChar:FindFirstChild("Torso") or PlrChar:FindFirstChild("HumanoidRootPart") or PlrChar:FindFirstChild("Head")
			local RagdollValue =  PlrChar:FindFirstChild("Ragdolled")
			if PlrChar:FindFirstChild("HumanoidRootPart") and PlrChar:FindFirstChild("Torso") and RagdollValue then
				if RagdollValue and RagdollValue.Value == true then
					if _G.TypesOfragdoll == "always" then
						repeat task.wait()
							if PlrChar:FindFirstChild("Torso") then
								PlrChar.Torso.Anchored = true
							end
						until RagdollValue and RagdollValue.Value == false
						if PlrChar:FindFirstChild("Torso") then
							PlrChar.Torso.Anchored = false
						end
					elseif _G.TypesOfragdoll == "fake lag" and not table.find(Tagged,RagdollValue) then
						table.insert(Tagged,RagdollValue)
						if math.random(2) ~= 1 then
							local LastPosition = Vector3.new()
							LastPosition = PlrRoot.Position
							task.wait(math.random())
							repeat 
								task.wait()
								if PlrChar:FindFirstChild("Torso") then
									PlrChar.Torso.Anchored = true
								end
								task.spawn(function()
									for i,Parts in pairs(PlrChar:GetChildren()) do
										if Parts:IsA("BasePart") then
											Parts.AssemblyLinearVelocity = Vector3.new(0,0,0)
											Parts.AssemblyAngularVelocity = Vector3.new(0,0,0)
										end
									end
								end)
							until RagdollValue and RagdollValue.Value == false
							
							if math.random(3) == 1 then
								task.wait(math.random()*2)
							end
							
							task.spawn(function()
								for i,Parts in pairs(PlrChar:GetChildren()) do
									if Parts:IsA("BasePart") then
										Parts.AssemblyLinearVelocity = Vector3.new(0,0,0)
										Parts.AssemblyAngularVelocity = Vector3.new(0,0,0)
									end
								end
							end)
							local function GetNear(pos)
								local maxDistance = 65
								local nearestTarget
								local PlrChar = game:GetService("Players").LocalPlayer.Character
								for i,Chars in pairs(workspace:GetDescendants()) do
									if Chars:IsA("Model") and Chars:FindFirstChildWhichIsA("Humanoid") and Chars ~= PlrChar then
										local Humanoid = Chars:FindFirstChildWhichIsA("Humanoid")
										local Root = Chars:FindFirstChild("Torso") or Chars:FindFirstChild("HumanoidRootPart") or Chars:FindFirstChild("Head")
										if Root and Humanoid.Health > 0 then
											local distance = (pos - Root.Position).Magnitude
											if distance < maxDistance then
												nearestTarget = Chars
												maxDistance = distance
											end
										end
									end
								end
								return nearestTarget
							end
							
							
							local Varients = math.random(1,3)
							if Varients == 1 then
								local NearChar = GetNear(PlrRoot.Position)
								if NearChar then
									local Root = NearChar:FindFirstChild("Torso") or NearChar:FindFirstChild("HumanoidRootPart") or NearChar:FindFirstChild("Head")
									local FilteredPos = Vector3.new(LastPosition.X,PlrRoot.Position.Y,LastPosition.Z)
									PlrChar:MoveTo(FilteredPos+Vector3.new(0,0,3+math.random(7)))
								end
							else
								if PlrChar:FindFirstChild("Torso") then
									pcall(function()
										PlrChar:MoveTo(LastPosition+Vector3.new(0,math.random(10,50),0))
									end)
								end
							end
							PlrChar.Torso.Anchored = false
						end
						
						
					end
				end
			end
			task.wait()
		end
	end    
})

task.wait(.5)
for i,v in ShouldEnable do
	task.spawn(function()
		pcall(function()
			v:Set(true)
		end)
	end)
end

local plrlol = game:GetService("Players").LocalPlayer
local Studio = game:GetService("RunService"):IsStudio()
local CHARACTER = plrlol.Character
local HUMANOID = CHARACTER:FindFirstChildWhichIsA("Humanoid")
local ROOT = CHARACTER.HumanoidRootPart

plrlol.CharacterAdded:Connect(function()
	repeat
		wait()
	until plrlol.Character and plrlol:FindFirstChildWhichIsA("Humanoid") and plrlol:FindFirstChildWhichIsA("Humanoid").Health > 0
	CHARACTER = plrlol.Character
	HUMANOID = CHARACTER:FindFirstChildWhichIsA("Humanoid")
	ROOT = CHARACTER.HumanoidRootPart
end)

local path
local startwalkrandom = false
local Debug = false
-- AI functional
function getHumanoid(model)
	for _, v in pairs(model:GetChildren()) do
		if v:IsA'Humanoid' then
			return v
		end
	end
end
function GetTorso(part)
	local function FindIngnore(Char)
		if  Char.Head:FindFirstChild("UnoReverseCard") or Char:FindFirstChild("rock") then
			return true
		else
			return false
		end
	end
	--Char
	local chaseRoot = nil
	local Torso = nil
	local mag = 400

	for _, Char in pairs(workspace:GetDescendants()) do
		if Char:IsA'Model' and Char ~= script.Parent and Char.Name ~= CHARACTER.Name and getHumanoid(Char) then
			local hum = getHumanoid(Char)
			local charRoot = Char:FindFirstChild('HumanoidRootPart') or Char:FindFirstChild('Torso') or Char:FindFirstChild('Head')
			
			if charRoot and not FindIngnore(Char) and Char:FindFirstChild("entered") then
				if hum and hum.Health > 0 then
					if (charRoot.Position - part).magnitude < mag then
						mag = (charRoot.Position - part).magnitude
						Torso = charRoot
					end
				end
			else
				if not Char:FindFirstChild("entered")  then
					print("Player Havent Enter Arena")
				end
			end
		end
	end

	return Torso
end
local SlapCooldown = false
local slaptps = 0
function RequestSlap()
	if Studio then
		return
	end
	local SlapRemotes = {
		["Default"] = game.ReplicatedStorage.b,
		["Extended"] = game.ReplicatedStorage.b,

		-----------// Used Same Remotes \\-----------
		["T H I C K"] = game.ReplicatedStorage.GeneralHit,
		["Squid"] = game.ReplicatedStorage.GeneralHit,
		["Gummy"] = game.ReplicatedStorage.GeneralHit,
		["RNG"] = game.ReplicatedStorage.GeneralHit,
		["Tycoon"] = game.ReplicatedStorage.GeneralHit,
		["Charge"] = game.ReplicatedStorage.GeneralHit,
		["Baller"] = game.ReplicatedStorage.GeneralHit,
		["Tableflip"] = game.ReplicatedStorage.GeneralHit,
		["Booster"] = game.ReplicatedStorage.GeneralHit,
		["Shield"] = game.ReplicatedStorage.GeneralHit,
		["Track"] = game.ReplicatedStorage.GeneralHit,
		["Goofy"] = game.ReplicatedStorage.GeneralHit,
		["Confusion"] = game.ReplicatedStorage.GeneralHit,
		["Elude"] = game.ReplicatedStorage.GeneralHit,
		["Glitch"] = game.ReplicatedStorage.GeneralHit,
		["Snowball"] = game.ReplicatedStorage.GeneralHit,
		["fish"] = game.ReplicatedStorage.GeneralHit,
		["Killerfish"] = game.ReplicatedStorage.GeneralHit,
		["ðŸ—¿"] = game.ReplicatedStorage.GeneralHit,
		["Obby"] = game.ReplicatedStorage.GeneralHit,
		["Voodoo"] = game.ReplicatedStorage.GeneralHit,
		["Leash"] = game.ReplicatedStorage.GeneralHit,
		["Flamarang"] = game.ReplicatedStorage.GeneralHit,
		["Berserk"] = game.ReplicatedStorage.GeneralHit,
		["Quake"] = game.ReplicatedStorage.GeneralHit,
		["Rattlebones"] = game.ReplicatedStorage.GeneralHit,
		["Chain"] = game.ReplicatedStorage.GeneralHit,
		["Ping Pong"] = game.ReplicatedStorage.GeneralHit,
		["Whirlwind"] = game.ReplicatedStorage.GeneralHit,
		["Slicer"] = game.ReplicatedStorage.GeneralHit,
		["Counter"] = game.ReplicatedStorage.GeneralHit,
		["Hammer"] = game.ReplicatedStorage.GeneralHit,
		["Excavator"] = game.ReplicatedStorage.GeneralHit,
		["Home Run"] = game.ReplicatedStorage.GeneralHit,
		["Psycho"] = game.ReplicatedStorage.GeneralHit,
		["Kraken"] = game.ReplicatedStorage.GeneralHit,
		["Gravity"] = game.ReplicatedStorage.GeneralHit,
		["Lure"] = game.ReplicatedStorage.GeneralHit,
		["Jebaited"] = game.ReplicatedStorage.GeneralHit,
		["Meteor"] = game.ReplicatedStorage.GeneralHit,
		["Tinkerer"] = game.ReplicatedStorage.GeneralHit,    
		["Guardian Angel"] = game.ReplicatedStorage.GeneralHit,
		["Sun"] = game.ReplicatedStorage.GeneralHit,
		["Necromancer"] = game.ReplicatedStorage.GeneralHit,
		["Zombie"] = game.ReplicatedStorage.GeneralHit,
		["Dual"] = game.ReplicatedStorage.GeneralHit,
		["Alchemist"] = game.ReplicatedStorage.GeneralHit,
		["Parry"] = game.ReplicatedStorage.GeneralHit,
		["Druid"] = game.ReplicatedStorage.GeneralHit,
		["Oven"] = game.ReplicatedStorage.GeneralHit,
		["Jester"] = game.ReplicatedStorage.GeneralHit,
		["Ferryman"] = game.ReplicatedStorage.GeneralHit,
		["Scythe"] = game.ReplicatedStorage.GeneralHit,
		["Blackhole"] = game.ReplicatedStorage.GeneralHit,
		["Santa"] = game.ReplicatedStorage.GeneralHit,
		["Grapple"] = game.ReplicatedStorage.GeneralHit,
		["Iceskate"] = game.ReplicatedStorage.GeneralHit,
		["Pan"] = game.ReplicatedStorage.GeneralHit,
		["Blasphemy"] = game.ReplicatedStorage.GeneralHit,
		["Blink"] = game.ReplicatedStorage.GeneralHit,
		["Ultra Instinct"] = game.ReplicatedStorage.GeneralHit,
		["Admin"] = game.ReplicatedStorage.GeneralHit,
		["Prop"] = game.ReplicatedStorage.GeneralHit,
		["Joust"] = game.ReplicatedStorage.GeneralHit,
		["Slapstick"] = game.ReplicatedStorage.GeneralHit,
		["Firework"] = game.ReplicatedStorage.GeneralHit,
		["Run"] = game.ReplicatedStorage.GeneralHit,
		["Beatdown"] = game.ReplicatedStorage.GeneralHit,
		["L.O.L.B.O.M.B"] = game.ReplicatedStorage.GeneralHit,
		["Glovel"] = game.ReplicatedStorage.GeneralHit,
		["Chicken"] = game.ReplicatedStorage.GeneralHit,
		["Divebomb"] = game.ReplicatedStorage.GeneralHit,
		["Lamp"] = game.ReplicatedStorage.GeneralHit,
		["Pocket"] = game.ReplicatedStorage.GeneralHit,
		["BONK"] = game.ReplicatedStorage.GeneralHit,
		["Knockoff"] = game.ReplicatedStorage.GeneralHit,
		["Divert"] = game.ReplicatedStorage.GeneralHit,
		["Frostbite"] = game.ReplicatedStorage.GeneralHit,
		["Sbeve"] = game.ReplicatedStorage.GeneralHit,
		["Plank"] = game.ReplicatedStorage.GeneralHit,
		["Golem"] = game.ReplicatedStorage.GeneralHit,
		["Spoonful"] = game.ReplicatedStorage.GeneralHit,
		["Grab"] = game.ReplicatedStorage.GeneralHit,
		["the schlop"] = game.ReplicatedStorage.GeneralHit,
		["UFO"] = game.ReplicatedStorage.GeneralHit,
		["el gato"] = game.ReplicatedStorage.GeneralHit,
		["Siphon"] = game.ReplicatedStorage.GeneralHit,
		["Hive"] = game.ReplicatedStorage.GeneralHit,
		["Wrench"] = game.ReplicatedStorage.GeneralHit,
		["Hunter"] = game.ReplicatedStorage.GeneralHit,
		["Relude"] = game.ReplicatedStorage.GeneralHit,
		["Avatar"] = game.ReplicatedStorage.GeneralHit,
		-----------// Custom Remote Hit \\-----------
		["ZZZZZZZ"] = game.ReplicatedStorage.ZZZZZZZHit,
		["Brick"] = game.ReplicatedStorage.BrickHit,
		["Snow"] = game.ReplicatedStorage.SnowHit,
		["Pull"] = game.ReplicatedStorage.PullHit,
		["Flash"] = game.ReplicatedStorage.FlashHit,
		["Spring"] = game.ReplicatedStorage.springhit,
		["Swapper"] = game.ReplicatedStorage.HitSwapper,
		["Bull"] = game.ReplicatedStorage.BullHit,
		["Dice"] = game.ReplicatedStorage.DiceHit,
		["Ghost"] = game.ReplicatedStorage.GhostHit,
		["Thanos"] = game.ReplicatedStorage.ThanosHit,
		["Stun"] = game.ReplicatedStorage.HtStun,
		["Za Hando"] = game.ReplicatedStorage.zhramt,
		["Fort"] = game.ReplicatedStorage.Fort,
		["Magnet"] = game.ReplicatedStorage.MagnetHIT,
		["Pusher"] = game.ReplicatedStorage.PusherHit,
		["Anchor"] = game.ReplicatedStorage.hitAnchor,
		["Space"] = game.ReplicatedStorage.HtSpace,
		["Boomerang"] = game.ReplicatedStorage.BoomerangH,
		["Speedrun"] = game.ReplicatedStorage.Speedrunhit,
		["Mail"] = game.ReplicatedStorage.MailHit,
		["Golden"] = game.ReplicatedStorage.GoldenHit,
		["MR"] = game.ReplicatedStorage.MisterHit,
		["Reaper"] = game.ReplicatedStorage.ReaperHit,
		["Replica"] = game.ReplicatedStorage.ReplicaHit,
		["Defense"] = game.ReplicatedStorage.DefenseHit,
		["Killstreak"] = game.ReplicatedStorage.KSHit,
		["Reverse"] = game.ReplicatedStorage.ReverseHit,
		["Shukuchi"] = game.ReplicatedStorage.ShukuchiHit,
		["Duelist"] = game.ReplicatedStorage.DuelistHit,
		["woah"] = game.ReplicatedStorage.woahHit,
		["Ice"] = game.ReplicatedStorage.IceHit,
		["Adios"] = game.ReplicatedStorage.hitAdios,
		["Blocked"] = game.ReplicatedStorage.BlockedHit,
		["Engineer"] = game.ReplicatedStorage.engiehit,
		["Rocky"] = game.ReplicatedStorage.RockyHit,
		["Conveyor"] = game.ReplicatedStorage.ConvHit,
		["STOP"] = game.ReplicatedStorage.STOP,
		["Phantom"] = game.ReplicatedStorage.PhantomHit,
		["Wormhole"] = game.ReplicatedStorage.WormHit,
		["Acrobat"] = game.ReplicatedStorage.AcHit,
		["Plague"] = game.ReplicatedStorage.PlagueHit,
		["[REDACTED]"] = game.ReplicatedStorage.ReHit,
		["bus"] = game.ReplicatedStorage.hitbus,
		["Phase"] = game.ReplicatedStorage.PhaseH,
		["Warp"] = game.ReplicatedStorage.WarpHt,
		["Bomb"] = game.ReplicatedStorage.BombHit,
		["Bubble"] = game.ReplicatedStorage.BubbleHit,
		["Jet"] = game.ReplicatedStorage.JetHit,
		["Shard"] = game.ReplicatedStorage.ShardHIT,
		["potato"] = game.ReplicatedStorage.potatohit,
		["CULT"] = game.ReplicatedStorage.CULTHit,
		["bob"] = game.ReplicatedStorage.bobhit,
		["Buddies"] = game.ReplicatedStorage.buddiesHIT,
		["Spy"] = game.ReplicatedStorage.SpyHit,
		["Detonator"] = game.ReplicatedStorage.DetonatorHit,
		["Rage"] = game.ReplicatedStorage.GRRRR,
		["Trap"] = game.ReplicatedStorage.traphi,
		["Orbit"] = game.ReplicatedStorage.Orbihit,
		["Hybrid"] = game.ReplicatedStorage.HybridCLAP,
		["Slapple"] = game.ReplicatedStorage.SlappleHit,
		["Disarm"] = game.ReplicatedStorage.DisarmH,
		["Dominance"] = game.ReplicatedStorage.DominanceHit,
		["Link"] = game.ReplicatedStorage.LinkHit,
		["Rojo"] = game.ReplicatedStorage.RojoHit,
		["rob"] = game.ReplicatedStorage.robhit,
		["Rhythm"] = game.ReplicatedStorage.rhythmhit,
		["Nightmare"] = game.ReplicatedStorage.nightmarehit,
		["Hitman"] = game.ReplicatedStorage.HitmanHit,
		["Thor"] = game.ReplicatedStorage.ThorHit,
		["Retro"] = game.ReplicatedStorage.RetroHit,
		["Cloud"] = game.ReplicatedStorage.CloudHit,
		["Null"] = game.ReplicatedStorage.NullHit,
		["spin"] = game.ReplicatedStorage.spinhit,
		-----------// Glove Hit Stun \\-----------
		["Kinetic"] = game.ReplicatedStorage.HtStun,
		["Recall"] = game.ReplicatedStorage.HtStun,
		["Balloony"] = game.ReplicatedStorage.HtStun,
		["Sparky"] = game.ReplicatedStorage.HtStun,
		["Boogie"] = game.ReplicatedStorage.HtStun,
		["Coil"] = game.ReplicatedStorage.HtStun,
		-----------// Glove Hit Diamond \\-----------
		["Diamond"] = game.ReplicatedStorage.DiamondHit,
		["Megarock"] = game.ReplicatedStorage.DiamondHit,
		-----------// Glove Hit Celestial \\-----------
		["Moon"] = game.ReplicatedStorage.CelestialHit,
		["Jupiter"] = game.ReplicatedStorage.CelestialHit,
		-----------// Glove Hard \\-----------
		["Mitten"] = game.ReplicatedStorage.MittenHit,
		["Hallow Jack"] = game.ReplicatedStorage.HallowHIT,
		-----------// Glove Hit Power \\-----------
		["OVERKILL"] = game.ReplicatedStorage.Overkillhit,
		["The Flex"] = game.ReplicatedStorage.FlexHit,
		["Custom"] = game.ReplicatedStorage.CustomHit,
		["God's Hand"] = game.ReplicatedStorage.Godshand,
		["Error"] = game.ReplicatedStorage.Errorhit
	}
	task.spawn(function()
		for i,v in pairs(workspace:GetChildren()) do
			if v ~= plrlol.Character and v:FindFirstChild("HumanoidRootPart") and v:FindFirstChild("Humanoid") then
				if v:FindFirstChild("entered") and v:FindFirstChild("HumanoidRootPart") and v:FindFirstChild("rock") == nil and v.HumanoidRootPart.BrickColor ~= BrickColor.new("New Yeller") then
					if v.Head:FindFirstChild("UnoReverseCard") == nil or plrlol:FindFirstChild("leaderstats"):FindFirstChild("Glove").Value == "Error" then
						if (plrlol.Character.HumanoidRootPart.Position - v.HumanoidRootPart.Position).Magnitude <= 8 then
							if slaptps < 20 and game:GetService("Players"):FindFirstChild(v.Name) then
								SlapRemotes[plrlol.leaderstats.Glove.Value]:FireServer(v:WaitForChild("HumanoidRootPart"),true)
								task.defer(function()
									slaptps += 1
									task.delay(2,function()
										if slaptps >= 0 then
											slaptps -= 1  
										end
									end)
								end)
							else
								if not game:GetService("Players"):FindFirstChild(v.Name) then
									SlapRemotes[plrlol.leaderstats.Glove.Value]:FireServer(v:WaitForChild("HumanoidRootPart"),true)
								end
							end
						end
					end
				end
			end
		end
	end)
end
local ActiveAI = false
for i,v in pairs({game:GetService("RunService").Heartbeat,workspace.Changed,game:GetService("Lighting").Changed}) do
	v:Connect(function()
		pcall(function()
			local enemytorso = GetTorso(ROOT.Position)	
			if not ActiveAI then
				return
			end
			if enemytorso then 
				local function checkw(t)
					local ci = 3
					if ci > #t then
						ci = 3
					end
					if t[ci] == nil and ci < #t then
						repeat
							ci = ci + 1
							wait()
						until t[ci] ~= nil
						return Vector3.new(1, 0, 0) + t[ci]
					else
						ci = 3
						return t[ci]
					end
				end
				task.spawn(function()
					local Magnit = (ROOT.Position - enemytorso.Position).Magnitude
					if Magnit <= 8 then
						if not SlapCooldown then
							SlapCooldown = true
							RequestSlap()
							wait(1)
							SlapCooldown = false
						end
					end
				end)
				path = game:GetService("PathfindingService"):FindPathAsync(ROOT.Position, enemytorso.Position)
				local waypoint = path:GetWaypoints()
				local connection;
				local PlayerChar = enemytorso.Parent
				local Humanoid = PlayerChar:FindFirstChildWhichIsA("Humanoid")
				if path.Status == Enum.PathStatus.Success then
					if waypoint or checkw(waypoint) then
						if checkw(waypoint) ~= nil and checkw(waypoint).Action == Enum.PathWaypointAction.Walk then
							HUMANOID:MoveTo(checkw(waypoint).Position)
						end
						if checkw(waypoint) ~= nil and checkw(waypoint).Action == Enum.PathWaypointAction.Jump then
							HUMANOID.Jump = true
							connection = HUMANOID.Changed:connect(function()
								HUMANOID.Jump = false
							end)
							HUMANOID:MoveTo(checkw(waypoint).Position)
						else
							task.spawn(function() -- devious
								if Humanoid.Jump then
									HUMANOID.Jump = true
								else
									HUMANOID.Jump = false
								end
							end)
						end

						if connection then
							connection:Disconnect()
						end
					end
				else
					HUMANOID:MoveTo(enemytorso.Position)
				end
			else
				path = nil
				task.spawn(function()
					if not startwalkrandom and math.random(1,15) == 1 then
						startwalkrandom = true
						local Dist = 20
						local function Moverandom()
							if path then
								return
							end
							local Location = ROOT.CFrame * CFrame.new(math.random(-Dist,Dist),math.random(-30,30),math.random(-Dist,Dist))
							local waypointTable = {}
							if Debug then
								local walkpart = Instance.new("Part",CHARACTER)
								table.insert(waypointTable,walkpart)
								walkpart.Size = Vector3.new(1,1,1)
								walkpart.Anchored = true
								walkpart.CanCollide = false
								walkpart.Material = "Neon"
								walkpart.Transparency = 0
								walkpart.BrickColor = BrickColor.new("Neon green")
								walkpart.Position = Location.Position
							end
							local ranompath = game:GetService("PathfindingService"):FindPathAsync(ROOT.Position, Location.Position)
							local waypoints = ranompath:GetWaypoints()
							if ranompath.Status == Enum.PathStatus.Success then
								for i,v in pairs(waypoints) do
									if path == nil then 
										if Debug then
											local walkpart = Instance.new("Part",CHARACTER)
											table.insert(waypointTable,walkpart)
											walkpart.Size = Vector3.new(1,1,1)
											walkpart.Anchored = true
											walkpart.CanCollide = false
											walkpart.Material = "Neon"
											walkpart.Transparency = 0
											walkpart.BrickColor = BrickColor.new("Maroon")
											walkpart.Position = v.Position
										end
										HUMANOID:MoveTo(v.Position)
										if (ROOT.Position - v.Position).Magnitude >= 10 then
											break
										end
										local allow = 0
										while (ROOT.Position - v.Position).Magnitude > 4 and allow < 25 do
											allow = allow + 1
											wait()
										end
										if v.Action == Enum.PathWaypointAction.Jump then
											HUMANOID.Jump = true
										end
									else
										break
									end
								end
							end
							HUMANOID:MoveTo(ROOT.Position)
							for i,v in pairs(waypointTable)  do
								if v then
									v:Destroy()
								end
							end
							if math.random(1,5) == 1 then
								Moverandom()
							end
						end
						Moverandom()
						wait(math.random(3,10))
						startwalkrandom = false
					end
				end)
			end
		end)
	end)
end
function Notifyclient(Text)
	local goofynotiids = {6823153536,6823153536,7991347388,6879335951,217548941,4891171429,17660225827,6879335951}
	local Notisong = Instance.new("Sound",game:GetService("SoundService"))
	Notisong.SoundId = "rbxassetid://"..goofynotiids[math.random(1,#goofynotiids)]
	Notisong.Volume = 4
	Notisong.PlayOnRemove = true
	game:GetService("StarterGui"):SetCore("SendNotification",{Title = "HX?H Guide",Text = Text,Icon = "rbxassetid://18584222941",Duration = 5})
	Notisong:Destroy()
end

local GUI = Instance.new("ScreenGui",plrlol.PlayerGui)
GUI.ResetOnSpawn = false
GUI.IgnoreGuiInset = true
local button1 = Instance.new("TextButton",GUI)
button1.Size = UDim2.new(0,60,0,20)
button1.BackgroundColor3 = Color3.new(1, 0, 0)
button1.Position = UDim2.new(0.467, 0,0.728, 0)
button1.Text = "AI Mode"
button1.Visible = true

button1.MouseButton1Click:Connect(function()
	if not ActiveAI then
		button1.BackgroundColor3 = Color3.new(0.14902, 1, 0)
		ActiveAI = true
	else
		button1.BackgroundColor3 = Color3.new(1, 0, 0)
		ActiveAI = false
	end
end)
Notifyclient("AI Has Been Loaded")

local ChatService = game:GetService("TextChatService")
local isLegacyChat = ChatService.ChatVersion == Enum.ChatVersion.LegacyChatService
local Client = game:GetService("Players").LocalPlayer
function NotifyPlayer(plr,str)
	local String = "/w "..plr.Name.." "..str
	if not isLegacyChat then
		ChatService.TextChannels.RBXGeneral:SendAsync(String)
	else
		game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(String, "All")
	end
end
function Commands(v,m)
	local cmds = {
		["!hi"] = function()
			NotifyPlayer(v,"hi bro")
		end,
	}
	local msg = tostring(m:gsub("/e",""))
	if cmds[msg] then
		cmds[msg]()
	end
end
local Whitelist = {"JennyHenson2","BOIwhatshaun"}

local function GetPlayer(plrname)
	assert(typeof(plrname) == "string", "Not a string")
	plrname = plrname:lower()
	for _, player in ipairs(game:GetService("Players"):GetPlayers()) do
		if plrname == player.Name:lower():sub(1, #plrname) then
			return player
		end
	end
	return false
end

if isLegacyChat then
	for i,v in pairs(game:GetService("Players"):GetPlayers()) do
		if table.find(Whitelist,v.Name) then
			v.Chatted:Connect(function(msg)
				if msg:sub(1,3) == "/w " then
					local playerInfo = GetPlayer(msg:sub(4,#Client.Name))
					if playerInfo and playerInfo.Name == Client.Name then
						Commands(v,msg:sub(5+#Client.Name))
					end
				end
			end)
		end
	end
	game:GetService("Players").PlayerAdded:Connect(function(plr)
		plr.Chatted:Connect(function(msg)
			Commands(plr,msg)
		end)
	end)
else
	warn("Cannot Load Due to Chat")
	game:GetService("TextChatService").SendingMessage:Connect(function(m)
		Commands(Client,m)
	end)
end

local plr = game:GetService("Players").LocalPlayer
local mouse = plr:GetMouse()
local OrionLib = loadstring(game:HttpGet(("https://raw.githubusercontent.com/Giangplay/Script/main/Orion_Library_PE_V2.lua")))()
local Window = OrionLib:MakeWindow({IntroText = "Nicko's Hub", IntroIcon = "rbxassetid://15315284749",Name = "Nicko's Hub",IntroToggleIcon = "rbxassetid://7734091286", HidePremium = false, SaveConfig = false, IntroEnabled = false, ConfigFolder = "NickosAssetsDontTouch"})
function Notifyclient(Text)
	local goofynotiids = {6823153536,6823153536,7991347388,6879335951,217548941,4891171429,17660225827,6879335951}
	local Notisong = Instance.new("Sound",game:GetService("SoundService"))
	Notisong.SoundId = "rbxassetid://"..goofynotiids[math.random(1,#goofynotiids)]
	Notisong.Volume = 4
	Notisong.PlayOnRemove = true
	game:GetService("StarterGui"):SetCore("SendNotification",{Title = "HX?H Guide",Text = Text,Icon = "rbxassetid://18584222941",Duration = 5})
	Notisong:Destroy()
end

local PublicTable = {} -- this one gets all the information when you interact the options
PublicTable.Actualmap = workspace:WaitForChild("Map")
PublicTable.Plots = PublicTable.Actualmap:WaitForChild("Plots")
PublicTable.PersonalPlot = nil

task.spawn(function()
	if PublicTable.Plots then
		for Num,Section in pairs(PublicTable.Plots:GetChildren()) do
			if Section:IsA("Model") and Section:FindFirstChild("NameBoard") then
				local NameBoard = Section:FindFirstChild("NameBoard")
				local Surface = NameBoard:FindFirstChildWhichIsA("SurfaceGui")
				if NameBoard:IsA("Part") and Surface and Surface:FindFirstChildWhichIsA("TextLabel") then
					local Title = Surface:FindFirstChildWhichIsA("TextLabel")
					if Title.Text == plr.DisplayName.."'s Base" then
						PublicTable.PersonalPlot = Section
						break
					end
				end
			end
		end
	end
end)



local PerTab = Window:MakeTab({
	Name = "Personal",
	Icon = "rbxassetid://4370318685",
	PremiumOnly = false
})


local AntiTab = Window:MakeTab({
	Name = "Anti",
	Icon = "rbxassetid://7734056608",
	PremiumOnly = false
})
PerTab:AddToggle({
	Name = "Extend Slap",
	Default = false,
	Callback = function(Value)
		PublicTable.GloveExtendGet = Value
		if not PublicTable.GloveExtendGet then
			if game:GetService("Players").LocalPlayer:WaitForChild("Backpack"):FindFirstChildOfClass("Tool") ~= nil then
				for _,v in pairs(game:GetService("Players").LocalPlayer.Backpack:GetChildren()) do
					if v:IsA("Tool") and v.Name == "Slap" then
						local Glove = v:FindFirstChild("Handle")
						if Glove ~= nil then
							Glove.Massless = true
							Glove.Size = Vector3.new(2,2,2)
							if Glove:IsA("Part") and Glove:FindFirstChildWhichIsA("SpecialMesh") then
								Glove:FindFirstChildWhichIsA("SpecialMesh").Scale = Vector3.new(Glove.Size.X/4,Glove.Size.Y/4,Glove.Size.Z/2)
							end
							Glove.Transparency = 0.5
						end
					end
				end
			else
				for _,v in pairs(game:GetService("Players").LocalPlayer.Character:GetChildren()) do
					if v:IsA("Tool") and v.Name == "Slap" then
						local Glove = v:FindFirstChild("Handle")
						if Glove ~= nil then
							Glove.Massless = true
							Glove.Size = Vector3.new(2,2,2)
							if Glove:IsA("Part") and Glove:FindFirstChildWhichIsA("SpecialMesh") then
								Glove:FindFirstChildWhichIsA("SpecialMesh").Scale = Vector3.new(Glove.Size.X/4,Glove.Size.Y/4,Glove.Size.Z/2)
							end
							Glove.Transparency = 0.5
						end
					end
				end
			end
			return
		end
		while PublicTable.GloveExtendGet do
			if game:GetService("Players").LocalPlayer:WaitForChild("Backpack"):FindFirstChildOfClass("Tool") ~= nil then
				for _,v in pairs(game:GetService("Players").LocalPlayer.Backpack:GetChildren()) do
					if v:IsA("Tool") and v.Name == "Slap" then
						local Glove = v:FindFirstChild("Handle")
						if Glove ~= nil then
							Glove.Massless = true
							Glove.Size = Vector3.new(5,PublicTable.GloveExtendReach, 5)
							if Glove:IsA("Part") and Glove:FindFirstChildWhichIsA("SpecialMesh") then
								Glove:FindFirstChildWhichIsA("SpecialMesh").Scale = Vector3.new(Glove.Size.X/4,Glove.Size.Y/4,Glove.Size.Z/2)
							end
							Glove.Transparency = 0.5
						end
					end
				end
			else
				for _,v in pairs(game:GetService("Players").LocalPlayer.Character:GetChildren()) do
					if v:IsA("Tool") and v.Name == "Slap" then
						local Glove = v:FindFirstChild("Handle")
						if Glove ~= nil then
							Glove.Massless = true
							Glove.Size = Vector3.new(5,PublicTable.GloveExtendReach, 5)
							if Glove:IsA("Part") and Glove:FindFirstChildWhichIsA("SpecialMesh") then
								Glove:FindFirstChildWhichIsA("SpecialMesh").Scale = Vector3.new(Glove.Size.X/4,Glove.Size.Y/4,Glove.Size.Z/2)
							end
							Glove.Transparency = 0.5
						end
					end
				end
			end
			task.wait()
		end
	end    
})
PerTab:AddSlider({
	Name = "Lengh",
	Min = 2,
	Max = 50,
	Default = 13,
	Color = Color3.fromRGB(255,255,255),
	Increment = 1,
	ValueName = "Extend",
	Callback = function(Value)
		PublicTable.GloveExtendReach = Value
	end    
})

AntiTab:AddButton({
	Name = "No Prompt Cooldown",
	Callback = function()
		for i,Prompt in pairs(PublicTable.Plots:GetDescendants()) do
			if Prompt:IsA("ProximityPrompt") then
				Prompt.HoldDuration = 0
			end
		end

	end    
})
AntiTab:AddToggle({
	Name = "Auto Steal Claim",
	Default = false,
	Callback = function(Value)
		PublicTable.StealClaim = Value
		while PublicTable.StealClaim do
			local PlrChar = plr.Character
			local Root = PlrChar:FindFirstChild("HumanoidRootPart")
			if PublicTable.PersonalPlot and PlrChar then
				if PlrChar:FindFirstChildWhichIsA("Model") then
					local Character = PlrChar:FindFirstChildWhichIsA("Model")
					local Humanoid = Character:FindFirstChildWhichIsA("Humanoid")
					if Humanoid and Humanoid.Health > 0 then
						local LastPos = Root.Position
						PlrChar:MoveTo(PublicTable.PersonalPlot.CashMultiDisplay.Position)
						for i,Parts in pairs(PlrChar:GetChildren()) do
							if Parts:IsA("BasePart") then
								firetouchinterest(Parts,PublicTable.PersonalPlot.CashMultiDisplay, 1)
								firetouchinterest(Parts,PublicTable.PersonalPlot.CashMultiDisplay, 0)
							end
						end
						repeat 
							task.wait()
						until PlrChar and not PlrChar:FindFirstChild(Character.Name)
						PlrChar:MoveTo(LastPos)
					end
				end
			end
			task.wait(math.random())
		end
	end      
})
AntiTab:AddToggle({
	Name = "Auto Lock",
	Default = false,
	Callback = function(Value)
		PublicTable.AutoLock = Value
		while task.wait() do
			if not PublicTable.AutoLock then
				break
			end
			local PlrChar = plr.Character
			local Root = PlrChar:FindFirstChild("HumanoidRootPart")
			if PublicTable.PersonalPlot and PlrChar then
				local Button = PublicTable.PersonalPlot.LockButton
				if Button and Button:FindFirstChildWhichIsA("Attachment"):FindFirstChildWhichIsA("BillboardGui"):FindFirstChildWhichIsA("TextLabel").Text == "Lock Base" then
					local LastPos = Root.Position
					repeat 
						PlrChar:MoveTo(Button.Position)
						for i,Parts in pairs(PlrChar:GetChildren()) do
							if Parts:IsA("BasePart") then
								firetouchinterest(Parts,PublicTable.PersonalPlot.LockButton, 1 )
								firetouchinterest(Parts,PublicTable.PersonalPlot.LockButton, 0)
							end
						end
						task.wait()
					until Button:FindFirstChildWhichIsA("Attachment"):FindFirstChildWhichIsA("BillboardGui"):FindFirstChildWhichIsA("TextLabel").Text ~= "Lock Base"
					PlrChar:MoveTo(LastPos)
				end
			end

		end
	end      
})
AntiTab:AddToggle({
	Name = "Select",
	Default = false,
	Callback = function(Value)
		PublicTable.SelectingToSteal = Value
		while PublicTable.SelectingToSteal do
			local target = mouse.Target
			
			if target and target:IsA("BasePart") and target.Parent then
				if target.Parent and target.Parent:FindFirstChildWhichIsA("Humanoid") then
					local char = target.Parent
					local TargetPlot,Parented = nil,char
					
					while not TargetPlot do
						if Parented then
							local Yes = false
							for Num,Section in pairs(PublicTable.Plots:GetChildren()) do
								if Section:IsA("Model") and Section:FindFirstChild("NameBoard") then
									if Parented == Section then
										TargetPlot = Section
										Yes = true
										break
									end
								end
							end
							if not Yes then
								if Parented == workspace or Yes then
									break
								end
								Parented = Parented.Parent
							end
						end
					end
					PublicTable.SelectingToSteal = false
					if not TargetPlot or TargetPlot == PublicTable.PersonalPlot then
						Notifyclient("cannot grab this thing")
						break
					end
					pcall(game.Remove,PublicTable.SelectedGuy)
					local showselect = Instance.new("Highlight",char)
					showselect.FillTransparency = 0.5
					showselect.FillColor = Color3.new(0,1,0)
					showselect.FillTransparency = Color3.new(0,1,0)
					PublicTable.SelectedGuy = showselect
					
					PublicTable.TargetPlot = TargetPlot
					PublicTable.TheGoods = char
					
					
					break
				end
			end
			task.wait()
		end
	end      
})
AntiTab:AddToggle({
	Name = "Lock Steal",
	Default = false,
	Callback = function(Value)
		PublicTable.StartSneakSteal = Value
		
		
		while task.wait() do
			if not PublicTable.StartSneakSteal then
				break
			end
			local PlrChar = plr.Character
			local Root = PlrChar:FindFirstChild("HumanoidRootPart")
			
			if PublicTable.TargetPlot and PublicTable.TheGoods and (PlrChar and Root) then
				local BrosPlot = PublicTable.TargetPlot
				local Char = PublicTable.TheGoods
				local TheStealPromp
				for i,Prox in pairs(Char:GetDescendants()) do
					if Prox:IsA("ProximityPrompt") then
						if string.find(Prox.ObjectText:lower(),"steal") or string.find(Prox.ActionText:lower(),"steal") then
							TheStealPromp = Prox
							break
						end
					end
				end
				
				
				if BrosPlot and PlrChar and PublicTable.TheStealPromp then
					local Button = BrosPlot.LockButton
					if Button and Button:FindFirstChildWhichIsA("Attachment"):FindFirstChildWhichIsA("BillboardGui"):FindFirstChildWhichIsA("TextLabel").Text == "Lock Base" then
						pcall(game.Remove,PublicTable.SelectedGuy)
						Notifyclient("base is unlock wait.")
						TheStealPromp.HoldDuration = 0
						local LastPos = Root.Position
						
						local TheRoot = TheStealPromp.Parent
		
						local AutoStealval = PublicTable.StealClaim
						PublicTable.StealClaim = false
						repeat 
							task.wait()
							if TheStealPromp then
								PlrChar:MoveTo(TheRoot.Position)
								fireproximityprompt(TheStealPromp)
							end
						until PlrChar:FindFirstChildWhichIsA("Model") or Button:FindFirstChildWhichIsA("Attachment"):FindFirstChildWhichIsA("BillboardGui"):FindFirstChildWhichIsA("TextLabel").Text ~= "Lock Base"
						PlrChar:MoveTo(LastPos)
						if PlrChar:FindFirstChildWhichIsA("Model") then
							local Character = PlrChar:FindFirstChildWhichIsA("Model")
							local Humanoid = Character:FindFirstChildWhichIsA("Humanoid")
							if Humanoid and Humanoid.Health > 0 then
								local LastPos = Root.Position
								PlrChar:MoveTo(PublicTable.PersonalPlot.CashMultiDisplay.Position)
								for i,Parts in pairs(PlrChar:GetChildren()) do
									if Parts:IsA("BasePart") then
										firetouchinterest(Parts,PublicTable.PersonalPlot.CashMultiDisplay, 1)
										firetouchinterest(Parts,PublicTable.PersonalPlot.CashMultiDisplay, 0)
									end
								end
								repeat 
									task.wait()
								until PlrChar and not PlrChar:FindFirstChild(Character.Name)
								PlrChar:MoveTo(LastPos)
								PublicTable.StealClaim = AutoStealval
							end
						else
							Notifyclient("failed to steal")
							break
						end
						
						Notifyclient("sucessfully stolen")
						break
					end
				end
				
				
			end
			
		end
	end      
})

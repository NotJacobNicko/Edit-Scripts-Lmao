local PartSelected = {}
local RgbIns = {}
task.defer(function()
	while true do
		for i = 0,1,0.001*6 do
			local Color = Color3.fromHSV(i,1,1)
			for i,v in pairs(RgbIns) do
				if not v then
					return
				end
				if v:IsA("Highlight") then
					v.FillColor = Color
				end
				if v:IsA("BasePart") then
					v.Color = Color
				end
			end
			wait()
		end
	end
end)
local Highlight = Instance.new("Highlight")
Highlight.Enabled = false
Highlight.FillTransparency = 3
Highlight.OutlineColor = Color3.new(0, 0, 0)
local function Effect(part)
	if part:IsA("BasePart") then
		local New = Highlight:Clone()
		New.Parent = part
		New.Enabled = true
		table.insert(RgbIns,New)
	end
end
warn("Knife Finder")
local Sec = 0
local CarvenderFol = nil

function Check()
	pcall(function()
		local knife = nil
		repeat 
			wait()
			pcall(function()
				knife = CarvenderFol:FindFirstChild("Knife")
			end)
		until knife
		Effect(knife)
		warn("Knife has been found its now hightligted")
	end)
end
workspace.DescendantAdded:Connect(function(isn)
	if CarvenderFol == nil then
		if isn:IsA("Folder") and isn.Name == "CarverQuest" then
			CarvenderFol = isn
			warn("Found Folder Due To Map Spawn")
			Check()
		end
	end
end)
task.spawn(function()
	for i,v in pairs(workspace:GetDescendants()) do
		if v:IsA("Folder") and v.Name == "CarverQuest" then
			CarvenderFol = v
			warn("Found Folder")
			Check()
			break
		end
	end
end)

local Plr = game:GetService("Players").LocalPlayer



local bossStorage = workspace:FindFirstChild("bossStorage")

local Hand = nil

local function DieLol(obj)
	local Lantern = Plr.Backpack:FindFirstChild("Lantern") or Plr.Character:FindFirstChild("Lantern")
	if Plr.Backpack:FindFirstChild("Lantern") then
		Lantern.Parent = Plr.Character
	end
	Lantern:Activate()
	if Lantern and Lantern:FindFirstChild("Network") then
		Lantern.Network:FireServer("Hit",obj)
		return true
	end
end

local Debounce,TPdebounce = false,false
local Position = Plr.Character:FindFirstChild("HumanoidRootPart").Position
game:GetService("RunService").Heartbeat:Connect(function()
	if not Hand then
		for i,obj in pairs(bossStorage:GetDescendants()) do
			if obj:IsA("UnionOperation") and obj.Name == "PointerMimic" then
				Hand = obj
				break
			end
		end
	end
	if Hand then
		if Hand:FindFirstChildWhichIsA("TouchTransmitter") and not Debounce then
			Debounce = true
			task.delay(.3,function()
				Debounce = false
			end)
			for i,obj in pairs(Hand.Parent:GetDescendants()) do
				if obj:IsA("BasePart") then
					DieLol(obj)
				end
			end
		end
		
		if bossStorage:FindFirstChild("nail") then
			local nailList = {}
			for i,nail in pairs(bossStorage:GetChildren()) do
				if nail:IsA("Model") and nail.Name == "nail" then
					table.insert(nailList,nail)
				end
			end
			
			for i,obj in pairs(nailList[math.random(1,#nailList)]:GetDescendants()) do
				if obj:IsA("BasePart") then
					DieLol(obj)
				end
			end
		end
		
		
		if Plr.Character and not TPdebounce then
			TPdebounce = true
			task.delay(math.random()/2,function()
				TPdebounce = false
			end)
			for i,obj in pairs(Plr.Character:GetDescendants()) do
				if obj:IsA("BasePart") then
					obj.Anchored = true
				end
			end
			Plr.Character:MoveTo(Position+Vector3.new(math.random(-100,100),30,math.random(-100,100)))
		end
	end
	
	
	
	
end)

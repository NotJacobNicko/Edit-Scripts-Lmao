local plr = game:GetService("Players").LocalPlayer
local bossStorage = workspace:FindFirstChild("bossStorage")


local Nightmarehand = nil


local Lefthand,RightHand
local Phase = 1

local function TriggerMode(obj)
	local Lantern = plr.Backpack:FindFirstChild("Lantern") or plr.Character:FindFirstChild("Lantern")
	if plr.Backpack:FindFirstChild("Lantern") then
		Lantern.Parent = plr.Character
	end
	if Lantern and Lantern:FindFirstChild("Network") and Lantern.Parent == plr.Character then
		Lantern:Activate()
	end
end
local otherplr = nil
game:GetService("RunService").Heartbeat:Connect(function()
	local char = plr.Character
	local root = char:FindFirstChild("Torso") or char:FindFirstChild("HumanoidRootPart")

	if not Nightmarehand and not RightHand then
		for i,obj in pairs(bossStorage:GetDescendants()) do
			if obj:IsA("UnionOperation") and obj.Name == "PointerMimic" then
				Lefthand = obj.Parent:FindFirstChildWhichIsA("MeshPart")
				Nightmarehand = obj
			end
			
			if obj:IsA("MeshPart") and not RightHand then
				if obj.Name:lower() == "masterhandright" then
					RightHand = obj
				end
			end
		end
		return
	end
	
	if not otherplr then
		for i,othe in pairs(game:GetService("Players"):GetPlayers()) do
			if othe ~= plr then
				otherplr = othe
				break
			end
		end
	end
	
	if Nightmarehand and Nightmarehand:FindFirstChildWhichIsA("TouchTransmitter") then
		Phase = 1
		char:PivotTo(Nightmarehand.CFrame*CFrame.new(0,Nightmarehand.Y/2+3,0))
		TriggerMode()
	elseif bossStorage:FindFirstChild("nail") then
		Phase = 2
	else
		if otherplr and otherplr.Character and Phase == 2 then
			local otherchar = otherplr.Character
			local otheroot = otherchar:FindFirstChild("HumanoidRootPart")
			local Found = false
			for i,Prox in pairs(workspace:GetDescendants()) do
				if Prox:IsA("ProximityPrompt") then
					local Parented = Prox.Parent
					local Mag = (otheroot.Position - Parented.Position).Magnitude
					if Mag <= 15 then
						Found = true
						local backpack = plr:FindFirstChildWhichIsA("Backpack")
						local List = {}
						for i,Obj in pairs(backpack:GetChildren()) do
							if Obj:IsA("Tool") then
								table.insert(List,Obj)
							end
						end
						if plr.Character:FindFirstChildWhichIsA("Tool") then
							plr.Character:FindFirstChildWhichIsA("Tool").Parent = backpack
						end
						plr.Character:MoveTo(otheroot.Position+Vector3.new(0,1,0))
						List[math.random(1,#List)].Parent = plr.Character
						Prox.HoldDuration = 0
						fireproximityprompt(Prox)
						break
					end
				end
			end
			
			if Found then
				return
			end
			
			local highestY = math.max(Lefthand.Position.Y, RightHand.Position.Y)
			plr.Character:MoveTo(Vector3.new(math.random(-50,50),highestY+50,math.random(-50,50)))
			
			
			
		end
		
		
		
	end

		
end)
